@@ -8,10 +8,6 @@
  *  cofh.core.util.helpers.StringHelper
  *  cofh.thermalexpansion.util.managers.machine.FurnaceManager
  *  cofh.thermalexpansion.util.managers.machine.SmelterManager$SmelterRecipe
- *  cofh.thermalfoundation.init.TFEquipment$ArmorSet
- *  cofh.thermalfoundation.init.TFEquipment$HorseArmor
- *  cofh.thermalfoundation.init.TFEquipment$ToolSet
- *  cofh.thermalfoundation.init.TFEquipment$ToolSetVanilla
  *  cofh.thermalfoundation.item.ItemMaterial
  *  it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap
  *  it.unimi.dsi.fastutil.objects.ObjectOpenHashSet
@@ -30,7 +26,6 @@ import cofh.core.util.helpers.ItemHelper;
 import cofh.core.util.helpers.StringHelper;
 import cofh.thermalexpansion.util.managers.machine.FurnaceManager;
 import cofh.thermalexpansion.util.managers.machine.SmelterManager;
-import cofh.thermalfoundation.init.TFEquipment;
 import cofh.thermalfoundation.item.ItemMaterial;
 import it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap;
 import it.unimi.dsi.fastutil.objects.ObjectOpenHashSet;
@@ -155,7 +150,7 @@ public class SmelterManager {
         SmelterManager.addDefaultRecipes("Lumium", ItemMaterial.ingotLumium);
         SmelterManager.addDefaultRecipes("Enderium", ItemMaterial.ingotEnderium);
         int energy = 6000;
-        ItemStack ingot = new ItemStack(Items.field_151042_j);
+        Object ingot = new ItemStack(Items.field_151042_j);
         SmelterManager.addRecycleRecipe(energy, new ItemStack(Items.field_151040_l), ingot, 1);
         SmelterManager.addRecycleRecipe(energy, new ItemStack(Items.field_151035_b), ingot, 1);
         SmelterManager.addRecycleRecipe(energy, new ItemStack(Items.field_151036_c), ingot, 1);
@@ -177,97 +172,16 @@ public class SmelterManager {
         SmelterManager.addRecycleRecipe(energy, new ItemStack((Item)Items.field_151149_ai), ingot, 3);
         SmelterManager.addRecycleRecipe(energy, new ItemStack((Item)Items.field_151151_aj), ingot, 2);
         SmelterManager.addRecycleRecipe(energy, new ItemStack(Items.field_151136_bY), ingot, 2, false);
-        for (TFEquipment.ToolSetVanilla toolSetVanilla : new TFEquipment.ToolSetVanilla[]{TFEquipment.ToolSetVanilla.IRON, TFEquipment.ToolSetVanilla.GOLD}) {
-            ingot = ItemHelper.getOre((String)toolSetVanilla.ingot);
-            if (toolSetVanilla.enable[0]) {
-                SmelterManager.addRecycleRecipe(energy, toolSetVanilla.toolBow, ingot, 1);
-            }
-            if (toolSetVanilla.enable[1]) {
-                SmelterManager.addRecycleRecipe(energy, toolSetVanilla.toolFishingRod, ingot, 1);
-            }
-            if (toolSetVanilla.enable[2]) {
-                SmelterManager.addRecycleRecipe(energy, toolSetVanilla.toolShears, ingot, 1);
-            }
-            if (toolSetVanilla.enable[3]) {
-                SmelterManager.addRecycleRecipe(energy, toolSetVanilla.toolSickle, ingot, 1);
-            }
-            if (toolSetVanilla.enable[4]) {
-                SmelterManager.addRecycleRecipe(energy, toolSetVanilla.toolHammer, ingot, 2);
-            }
-            if (toolSetVanilla.enable[5]) {
-                SmelterManager.addRecycleRecipe(energy, toolSetVanilla.toolExcavator, ingot, 1);
-            }
-            if (!toolSetVanilla.enable[6]) continue;
-            SmelterManager.addRecycleRecipe(energy, toolSetVanilla.toolShield, ingot, 3);
-        }
-        for (TFEquipment.ToolSet toolSet : TFEquipment.ToolSet.values()) {
-            ingot = ItemHelper.getOre((String)toolSet.ingot);
-            if (toolSet.enable[0]) {
-                SmelterManager.addRecycleRecipe(energy, toolSet.toolSword, ingot, 1);
-            }
-            if (toolSet.enable[1]) {
-                SmelterManager.addRecycleRecipe(energy, toolSet.toolPickaxe, ingot, 1);
-            }
-            if (toolSet.enable[2]) {
-                SmelterManager.addRecycleRecipe(energy, toolSet.toolAxe, ingot, 1);
-            }
-            if (toolSet.enable[3]) {
-                SmelterManager.addRecycleRecipe(energy, toolSet.toolShovel, ingot, 1);
-            }
-            if (toolSet.enable[4]) {
-                SmelterManager.addRecycleRecipe(energy, toolSet.toolHoe, ingot, 1);
-            }
-            if (toolSet.enable[5]) {
-                SmelterManager.addRecycleRecipe(energy, toolSet.toolBow, ingot, 1);
-            }
-            if (toolSet.enable[6]) {
-                SmelterManager.addRecycleRecipe(energy, toolSet.toolFishingRod, ingot, 1);
-            }
-            if (toolSet.enable[7]) {
-                SmelterManager.addRecycleRecipe(energy, toolSet.toolShears, ingot, 1);
-            }
-            if (toolSet.enable[8]) {
-                SmelterManager.addRecycleRecipe(energy, toolSet.toolSickle, ingot, 1);
-            }
-            if (toolSet.enable[9]) {
-                SmelterManager.addRecycleRecipe(energy, toolSet.toolHammer, ingot, 2);
-            }
-            if (toolSet.enable[10]) {
-                SmelterManager.addRecycleRecipe(energy, toolSet.toolExcavator, ingot, 1);
-            }
-            if (!toolSet.enable[11]) continue;
-            SmelterManager.addRecycleRecipe(energy, toolSet.toolShield, ingot, 3);
-        }
-        for (TFEquipment.ArmorSet armorSet : TFEquipment.ArmorSet.values()) {
-            ingot = ItemHelper.getOre((String)armorSet.ingot);
-            if (armorSet.enable[0]) {
-                SmelterManager.addRecycleRecipe(energy, armorSet.armorHelmet, ingot, 2);
-            }
-            if (armorSet.enable[1]) {
-                SmelterManager.addRecycleRecipe(energy, armorSet.armorChestplate, ingot, 4);
-            }
-            if (armorSet.enable[2]) {
-                SmelterManager.addRecycleRecipe(energy, armorSet.armorLegs, ingot, 3);
-            }
-            if (!armorSet.enable[3]) continue;
-            SmelterManager.addRecycleRecipe(energy, armorSet.armorBoots, ingot, 2);
-        }
-        for (TFEquipment.HorseArmor horseArmor : TFEquipment.HorseArmor.values()) {
-            if (!horseArmor.enable) continue;
-            ingot = ItemHelper.getOre((String)horseArmor.ingot);
-            SmelterManager.addRecycleRecipe(energy, horseArmor.armor, ingot, 2, false);
-        }
-        for (String string : oreNames = OreDictionary.getOreNames()) {
-            String oreType;
-            if (string.startsWith("ore")) {
-                if (!SmelterManager.isStandardOre(string)) continue;
-                oreType = string.substring(3);
-                SmelterManager.addDefaultRecipes(oreType, "");
+        for (String tool : oreNames = OreDictionary.getOreNames()) {
+            if (tool.startsWith("ore")) {
+                if (!SmelterManager.isStandardOre(tool)) continue;
+                ingot = tool.substring(3);
+                SmelterManager.addDefaultRecipes((String)ingot, "");
                 continue;
             }
-            if (!string.startsWith("dust") || !SmelterManager.isStandardOre(string)) continue;
-            oreType = string.substring(4);
-            SmelterManager.addDefaultRecipes(oreType, "");
+            if (!tool.startsWith("dust") || !SmelterManager.isStandardOre(tool)) continue;
+            ingot = tool.substring(4);
+            SmelterManager.addDefaultRecipes((String)ingot, "");
         }
     }